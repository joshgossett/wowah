// <auto-generated />
using System;
using AHDownloader.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AHDownloader.Migrations
{
    [DbContext(typeof(AuctionsDB))]
    [Migration("20190328233314_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AHDownloader.Db.Auction", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AuctionID");

                    b.Property<long>("AuctionSnapID");

                    b.Property<long>("Bid");

                    b.Property<long>("Buyout");

                    b.Property<long>("Item");

                    b.Property<string>("Owner");

                    b.Property<string>("OwnerRealm");

                    b.Property<long?>("PetBreedId");

                    b.Property<long?>("PetLevel");

                    b.Property<long?>("PetQualityId");

                    b.Property<long?>("PetSpeciesId");

                    b.Property<int>("Quantity");

                    b.Property<int>("TimeLeft");

                    b.HasKey("ID");

                    b.HasIndex("AuctionSnapID");

                    b.ToTable("Auctions");
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionBonusList", b =>
                {
                    b.Property<long>("AuctionID");

                    b.Property<long>("BonusListID");

                    b.HasKey("AuctionID", "BonusListID");

                    b.HasIndex("BonusListID");

                    b.ToTable("AuctionBonusLists");
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionModifier", b =>
                {
                    b.Property<long>("AuctionID");

                    b.Property<long>("ModifierID");

                    b.HasKey("AuctionID", "ModifierID");

                    b.HasIndex("ModifierID");

                    b.ToTable("AuctionModifiers");
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionSnap", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("TimeStamp");

                    b.Property<string>("Url");

                    b.HasKey("ID");

                    b.HasIndex("TimeStamp")
                        .IsUnique();

                    b.ToTable("AuctionSnaps");
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionSnapRealmData", b =>
                {
                    b.Property<long>("AuctionSnapID");

                    b.Property<long>("RealmDataID");

                    b.HasKey("AuctionSnapID", "RealmDataID");

                    b.HasIndex("RealmDataID");

                    b.ToTable("AuctionSnapRealmDatas");
                });

            modelBuilder.Entity("AHDownloader.Db.BonusList", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("BonusListId");

                    b.HasKey("ID");

                    b.HasAlternateKey("BonusListId");

                    b.ToTable("BonusLists");
                });

            modelBuilder.Entity("AHDownloader.Db.Modifier", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Type");

                    b.Property<long>("Value");

                    b.HasKey("ID");

                    b.HasAlternateKey("Type", "Value");

                    b.ToTable("Modifiers");
                });

            modelBuilder.Entity("AHDownloader.Db.RealmData", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Realm")
                        .IsRequired();

                    b.Property<string>("Slug");

                    b.HasKey("ID");

                    b.HasAlternateKey("Realm");

                    b.ToTable("RealmDatas");
                });

            modelBuilder.Entity("AHDownloader.Db.Auction", b =>
                {
                    b.HasOne("AHDownloader.Db.AuctionSnap", "AuctionSnap")
                        .WithMany("Auctions")
                        .HasForeignKey("AuctionSnapID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionBonusList", b =>
                {
                    b.HasOne("AHDownloader.Db.Auction", "Auction")
                        .WithMany("AuctionBonusLists")
                        .HasForeignKey("AuctionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AHDownloader.Db.BonusList", "BonusList")
                        .WithMany("AuctionsBonusLists")
                        .HasForeignKey("BonusListID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionModifier", b =>
                {
                    b.HasOne("AHDownloader.Db.Auction", "Auction")
                        .WithMany("AuctionModifiers")
                        .HasForeignKey("AuctionID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AHDownloader.Db.Modifier", "Modifier")
                        .WithMany("AuctionModifiers")
                        .HasForeignKey("ModifierID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AHDownloader.Db.AuctionSnapRealmData", b =>
                {
                    b.HasOne("AHDownloader.Db.AuctionSnap", "AuctionSnap")
                        .WithMany("AuctionSnapRealmDatas")
                        .HasForeignKey("AuctionSnapID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AHDownloader.Db.RealmData", "RealmData")
                        .WithMany("AuctionSnapRealmDatas")
                        .HasForeignKey("RealmDataID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
